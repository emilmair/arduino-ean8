#!/usr/bin/python3

import sys
import math

# process command line arguments
if len(sys.argv) < 3:
    print("syntax: generate <bits> <factor>")
    exit()
factor = int(sys.argv[2])
barcode = sys.argv[1]

# scale datapoints
scaled_barcode = ""
for bit in barcode:
    for i in range(factor):
        scaled_barcode += bit

# generate c-style array
scaled_barcode_save = scaled_barcode + "1111111111111111111111"

bytearray = []
for i in range(math.ceil(len(scaled_barcode_save)/8)):
    if i*8+8 > len(scaled_barcode_save): bytestring = scaled_barcode_save[i*8:i*8+8] + "0"*(i*8+8-len(scaled_barcode_save))
    else:
        bytestring = scaled_barcode_save[i*8:i*8+8]
    bytearray.append(int(bytestring, 2))
    print(f"byte{i} = {bytestring} = {int(bytestring, 2)}")

result = "{" + str(bytearray)[1:-1] + "}"

# overwrite test data
with open("test/main.cpp") as f:
    lines = f.readlines()
lines[0] = f"#define DATA {result}\n"
lines[1] = f"#define LENGTH {len(bytearray)}\n"
lines[2] = f"#define LENGTH_BITS {len(scaled_barcode_save)}\n"
with open("test/main.cpp", "w") as f:
    f.writelines(lines)


